/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/add-to-calendar-button/npm_dist/mjs/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/add-to-calendar-button/npm_dist/mjs/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atcb_action\": () => (/* binding */ atcb_action),\n/* harmony export */   \"atcb_init\": () => (/* binding */ atcb_init)\n/* harmony export */ });\n/**\n * ++++++++++++++++++++++\n * Add-to-Calendar Button\n * ++++++++++++++++++++++\n */\nconst atcbVersion = '1.14.4';\n/* Creator: Jens Kuerschner (https://jenskuerschner.de)\n * Project: https://github.com/add2cal/add-to-calendar-button\n * License: MIT with “Commons Clause” License Condition v1.0\n *\n */\n\n// CHECKING FOR SPECIFIC DEVICED AND SYSTEMS\n// browser\nconst isBrowser = new Function('try { return this===window; } catch(e) { return false; }');\n// iOS\nconst isiOS = isBrowser()\n  ? new Function(\n      'if ((/iPad|iPhone|iPod/i.test(navigator.userAgent || navigator.vendor || window.opera) && !window.MSStream) || (navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1)) { return true; } else { return false; }'\n    )\n  : new Function('return false;');\n// Android\nconst isAndroid = isBrowser()\n  ? new Function(\n      'if (/android/i.test(navigator.userAgent || navigator.vendor || window.opera) && !window.MSStream) { return true; } else { return false; }'\n    )\n  : new Function('return false;');\n// Mobile\nconst isMobile = () => {\n  if (isAndroid() || isiOS()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n// WebView (iOS and Android)\nconst isWebView = isBrowser()\n  ? new Function(\n      'if (/(; ?wv|(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari))/i.test(navigator.userAgent || navigator.vendor)) { return true; } else { return false; }'\n    )\n  : new Function('return false;');\n// checking for problematic apps\nconst isProblematicWebView = isBrowser()\n  ? new Function(\n      'if (/(Instagram)/i.test(navigator.userAgent || navigator.vendor || window.opera)) { return true; } else { return false; }'\n    )\n  : new Function('return false;');\n\n// DEFINE DEFAULT LINK TARGET\nlet atcbDefaultTarget = '_blank';\nif (isWebView()) {\n  atcbDefaultTarget = '_system';\n}\n\n// DEFINING GLOBAL ICONS\nconst atcbIcon = {\n  trigger:\n    '<svg class=\"atcb-icon-trigger\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200.016\"><path d=\"M132.829 7.699c0-4.248 4.199-7.699 9.391-7.699s9.391 3.451 9.391 7.699v33.724c0 4.248-4.199 7.699-9.391 7.699s-9.391-3.451-9.391-7.699zm-5.941 123.747c2.979 0 5.404 2.425 5.404 5.404s-2.425 5.404-5.404 5.404l-21.077-.065-.065 21.045c0 2.979-2.425 5.404-5.404 5.404s-5.404-2.425-5.404-5.404l.065-21.061-21.045-.081c-2.979 0-5.404-2.425-5.404-5.404s2.425-5.404 5.404-5.404l21.061.065.065-21.045c0-2.979 2.425-5.404 5.404-5.404s5.404 2.425 5.404 5.404l-.065 21.077 21.061.065zM48.193 7.699C48.193 3.451 52.393 0 57.585 0s9.391 3.451 9.391 7.699v33.724c0 4.248-4.199 7.699-9.391 7.699s-9.391-3.451-9.391-7.699zM10.417 73.763h179.167V34.945c0-1.302-.537-2.49-1.4-3.369-.863-.863-2.051-1.4-3.369-1.4h-17.171c-2.881 0-5.208-2.327-5.208-5.208s2.327-5.208 5.208-5.208h17.171c4.183 0 7.975 1.709 10.726 4.46S200 30.762 200 34.945v44.043 105.843c0 4.183-1.709 7.975-4.46 10.726s-6.543 4.46-10.726 4.46H15.186c-4.183 0-7.975-1.709-10.726-4.46C1.709 192.79 0 188.997 0 184.814V78.988 34.945c0-4.183 1.709-7.975 4.46-10.726s6.543-4.46 10.726-4.46h18.343c2.881 0 5.208 2.327 5.208 5.208s-2.327 5.208-5.208 5.208H15.186c-1.302 0-2.49.537-3.369 1.4-.863.863-1.4 2.051-1.4 3.369zm179.167 10.433H10.417v100.618c0 1.302.537 2.49 1.4 3.369.863.863 2.051 1.4 3.369 1.4h169.629c1.302 0 2.49-.537 3.369-1.4.863-.863 1.4-2.051 1.4-3.369zM82.08 30.176c-2.881 0-5.208-2.327-5.208-5.208s2.327-5.208 5.208-5.208h34.977c2.881 0 5.208 2.327 5.208 5.208s-2.327 5.208-5.208 5.208z\"/></svg>',\n  apple:\n    '<svg class=\"atcb-icon-apple\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 245.657\"><path d=\"M167.084 130.514c-.308-31.099 25.364-46.022 26.511-46.761-14.429-21.107-36.91-24.008-44.921-24.335-19.13-1.931-37.323 11.27-47.042 11.27-9.692 0-24.67-10.98-40.532-10.689-20.849.308-40.07 12.126-50.818 30.799-21.661 37.581-5.54 93.281 15.572 123.754 10.313 14.923 22.612 31.688 38.764 31.089 15.549-.612 21.433-10.073 40.242-10.073s24.086 10.073 40.546 9.751c16.737-.308 27.34-15.214 37.585-30.187 11.855-17.318 16.714-34.064 17.009-34.925-.372-.168-32.635-12.525-32.962-49.68l.045-.013zm-30.917-91.287C144.735 28.832 150.524 14.402 148.942 0c-12.344.503-27.313 8.228-36.176 18.609-7.956 9.216-14.906 23.904-13.047 38.011 13.786 1.075 27.862-7.004 36.434-17.376z\"/></svg>',\n  google:\n    '<svg class=\"atcb-icon-google\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\"><path d=\"M152.637 47.363H47.363v105.273h105.273z\" fill=\"#fff\"/><path d=\"M152.637 200L200 152.637h-47.363z\" fill=\"#f72a25\"/><path d=\"M200 47.363h-47.363v105.273H200z\" fill=\"#fbbc04\"/><path d=\"M152.637 152.637H47.363V200h105.273z\" fill=\"#34a853\"/><path d=\"M0 152.637v31.576A15.788 15.788 0 0 0 15.788 200h31.576v-47.363z\" fill=\"#188038\"/><path d=\"M200 47.363V15.788A15.79 15.79 0 0 0 184.212 0h-31.575v47.363z\" fill=\"#1967d2\"/><path d=\"M15.788 0A15.79 15.79 0 0 0 0 15.788v136.849h47.363V47.363h105.274V0z\" fill=\"#4285f4\"/><path d=\"M68.962 129.02c-3.939-2.653-6.657-6.543-8.138-11.67l9.131-3.76c.83 3.158 2.279 5.599 4.346 7.341 2.051 1.742 4.557 2.588 7.471 2.588 2.995 0 5.55-.911 7.699-2.718 2.148-1.823 3.223-4.134 3.223-6.934 0-2.865-1.139-5.208-3.402-7.031s-5.111-2.718-8.496-2.718h-5.273v-9.033h4.736c2.913 0 5.387-.781 7.389-2.376 2.002-1.579 2.995-3.743 2.995-6.494 0-2.441-.895-4.395-2.686-5.859s-4.053-2.197-6.803-2.197c-2.686 0-4.818.716-6.396 2.148s-2.767 3.255-3.451 5.273l-9.033-3.76c1.204-3.402 3.402-6.396 6.624-8.984s7.34-3.89 12.337-3.89c3.695 0 7.031.716 9.977 2.148s5.257 3.418 6.934 5.941c1.676 2.539 2.507 5.387 2.507 8.545 0 3.223-.781 5.941-2.327 8.187-1.546 2.23-3.467 3.955-5.729 5.143v.537a17.39 17.39 0 0 1 7.34 5.729c1.904 2.572 2.865 5.632 2.865 9.212s-.911 6.771-2.718 9.57c-1.823 2.799-4.329 5.013-7.52 6.624s-6.787 2.425-10.775 2.425c-4.622 0-8.887-1.318-12.826-3.988zm56.087-45.312l-10.026 7.243-5.013-7.601 17.985-12.972h6.901v61.198h-9.847z\" fill=\"#1a73e8\"/></svg>',\n  ical: '<svg class=\"atcb-icon-ical\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200.016\"><path d=\"M132.829 7.699c0-4.248 4.199-7.699 9.391-7.699s9.391 3.451 9.391 7.699v33.724c0 4.248-4.199 7.699-9.391 7.699s-9.391-3.451-9.391-7.699zm-25.228 161.263c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zm-81.803-59.766c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zm40.902 0c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zm40.902 0c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zm40.918 0c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zM25.798 139.079c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zm40.902 0c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zm40.902 0c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zm40.918 0c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zM25.798 168.962c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zm40.902 0c-.553 0-.993-2.327-.993-5.208s.439-5.208.993-5.208h25.7c.553 0 .993 2.327.993 5.208s-.439 5.208-.993 5.208zM48.193 7.699C48.193 3.451 52.393 0 57.585 0s9.391 3.451 9.391 7.699v33.724c0 4.248-4.199 7.699-9.391 7.699s-9.391-3.451-9.391-7.699zM10.417 73.763h179.15V34.945c0-1.302-.537-2.49-1.4-3.369-.863-.863-2.051-1.4-3.369-1.4h-17.155c-2.881 0-5.208-2.327-5.208-5.208s2.327-5.208 5.208-5.208h17.171c4.183 0 7.975 1.709 10.726 4.46S200 30.762 200 34.945v44.043 105.843c0 4.183-1.709 7.975-4.46 10.726s-6.543 4.46-10.726 4.46H15.186c-4.183 0-7.975-1.709-10.726-4.46C1.709 192.79 0 188.997 0 184.814V78.971 34.945c0-4.183 1.709-7.975 4.46-10.726s6.543-4.46 10.726-4.46h18.343c2.881 0 5.208 2.327 5.208 5.208s-2.327 5.208-5.208 5.208H15.186c-1.302 0-2.49.537-3.369 1.4-.863.863-1.4 2.051-1.4 3.369zm179.167 10.433H10.417v100.618c0 1.302.537 2.49 1.4 3.369.863.863 2.051 1.4 3.369 1.4h169.629c1.302 0 2.49-.537 3.369-1.4.863-.863 1.4-2.051 1.4-3.369zM82.08 30.176c-2.881 0-5.208-2.327-5.208-5.208s2.327-5.208 5.208-5.208h34.977c2.881 0 5.208 2.327 5.208 5.208s-2.327 5.208-5.208 5.208z\"/></svg>',\n  msteams:\n    '<svg class=\"atcb-icon-msteams\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 200 186.047\"><path d=\"M195.349 39.535a20.93 20.93 0 1 1-41.86 0 20.93 20.93 0 1 1 41.86 0zm-55.847 30.233h51.66A8.84 8.84 0 0 1 200 78.605v47.056c0 17.938-14.541 32.479-32.479 32.479h0-.154c-17.938.003-32.481-14.537-32.484-32.474v-.005-51.274a4.62 4.62 0 0 1 4.619-4.619z\" fill=\"#5059c9\"/><path d=\"M149.614 69.767H64.34c-4.823.119-8.637 4.122-8.526 8.944v53.67c-.673 28.941 22.223 52.957 51.163 53.665 28.94-.708 51.836-24.725 51.163-53.665v-53.67c.112-4.823-3.703-8.825-8.526-8.944zm-10.079-39.535a30.233 30.233 0 0 1-60.465 0 30.233 30.233 0 0 1 60.465 0z\" fill=\"#7b83eb\"/><path opacity=\".1\" d=\"M111.628 69.767v75.209c-.023 3.449-2.113 6.547-5.302 7.86-1.015.43-2.107.651-3.209.651H59.907l-1.628-4.651c-1.628-5.337-2.459-10.885-2.465-16.465V78.698c-.112-4.815 3.697-8.811 8.512-8.93z\"/><path opacity=\".2\" d=\"M106.977 69.767v79.86a8.241 8.241 0 0 1-.651 3.209c-1.313 3.189-4.412 5.279-7.86 5.302H62.093l-2.186-4.651a46.13 46.13 0 0 1-1.628-4.651 56.647 56.647 0 0 1-2.465-16.465V78.698c-.112-4.815 3.697-8.811 8.512-8.93z\"/><path opacity=\".2\" d=\"M102.326 69.767v70.558a8.58 8.58 0 0 1-8.512 8.512H58.279a56.647 56.647 0 0 1-2.465-16.465V78.698c-.112-4.815 3.697-8.811 8.512-8.93z\"/><path opacity=\".1\" d=\"M111.628 45.721v14.651l-2.326.093c-.791 0-1.535-.046-2.326-.093-1.57-.104-3.127-.353-4.651-.744a30.233 30.233 0 0 1-20.93-17.767 25.845 25.845 0 0 1-1.488-4.651h23.209c4.693.018 8.494 3.818 8.512 8.512z\"/><use xlink:href=\"#B\" opacity=\".2\" transform=\"scale(.08973306)\"/><path d=\"M106.977 50.372v10c-1.57-.104-3.127-.353-4.651-.744a30.233 30.233 0 0 1-20.93-17.767h17.07c4.693.018 8.494 3.818 8.512 8.512zm0 19.395v70.558a8.58 8.58 0 0 1-8.512 8.512H58.279a56.647 56.647 0 0 1-2.465-16.465V78.698c-.112-4.815 3.697-8.811 8.512-8.93z\" opacity=\".2\"/><path opacity=\".2\" d=\"M102.326 50.372v9.256a30.233 30.233 0 0 1-20.93-17.767h12.419c4.693.018 8.494 3.818 8.512 8.512z\"/><linearGradient id=\"A\" gradientUnits=\"userSpaceOnUse\" x1=\"17.776\" y1=\"35.199\" x2=\"84.55\" y2=\"150.848\"><stop offset=\"0\" stop-color=\"#5a62c3\"/><stop offset=\".5\" stop-color=\"#4d55bd\"/><stop offset=\"1\" stop-color=\"#3940ab\"/></linearGradient><path fill=\"url(#A)\" d=\"M8.526 41.86H93.8a8.53 8.53 0 0 1 8.526 8.526v85.274a8.53 8.53 0 0 1-8.526 8.526H8.526A8.53 8.53 0 0 1 0 135.66V50.386a8.53 8.53 0 0 1 8.526-8.526z\"/><path fill=\"#fff\" d=\"M73.6 74.316H56.553v46.419h-10.86V74.316H28.726v-9.005H73.6z\"/><defs><path id=\"B\" d=\"M1192.167 561.355v111.442c-17.496-1.161-34.848-3.937-51.833-8.293a336.92 336.92 0 0 1-233.25-198.003h190.228c52.304.198 94.656 42.55 94.855 94.854z\"/></defs></svg>',\n  ms365:\n    '<svg class=\"atcb-icon-ms365\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 239.766\"><path d=\"M200 219.785l-.021-.012V20.591L128.615 0 .322 48.172 0 48.234.016 192.257l43.78-17.134V57.943l84.819-20.279-.012 172.285L.088 192.257l128.515 47.456v.053l71.376-19.753v-.227z\"/></svg>',\n  outlookcom:\n    '<svg class=\"atcb-icon-outlookcom\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 175\"><path d=\"M178.725 0H71.275A8.775 8.775 0 0 0 62.5 8.775v9.975l60.563 18.75L187.5 18.75V8.775A8.775 8.775 0 0 0 178.725 0z\" fill=\"#0364b8\"/><path d=\"M197.813 96.281c.915-2.878 2.187-5.855 2.187-8.781-.002-1.485-.795-2.857-1.491-3.26l-68.434-38.99a9.37 9.37 0 0 0-9.244-.519c-.312.154-.614.325-.906.512l-67.737 38.6-.025.013-.075.044a4.16 4.16 0 0 0-2.088 3.6c.541 2.971 1.272 5.904 2.188 8.781l71.825 52.532z\" fill=\"#0a2767\"/><path d=\"M150 18.75h-43.75L93.619 37.5l12.631 18.75L150 93.75h37.5v-37.5z\" fill=\"#28a8ea\"/><path d=\"M150 18.75h37.5v37.5H150z\" fill=\"#50d9ff\"/><path d=\"M150 93.75l-43.75-37.5H62.5v37.5l43.75 37.5 67.7 11.05z\" fill=\"#0364b8\"/><path d=\"M106.25 56.25v37.5H150v-37.5zM150 93.75v37.5h37.5v-37.5zm-87.5-75h43.75v37.5H62.5z\" fill=\"#0078d4\"/><path d=\"M62.5 93.75h43.75v37.5H62.5z\" fill=\"#064a8c\"/><path d=\"M126.188 145.113l-73.706-53.75 3.094-5.438 68.181 38.825a3.3 3.3 0 0 0 2.625-.075l68.331-38.937 3.1 5.431z\" fill=\"#0a2767\" opacity=\".5\"/><path d=\"M197.919 91.106l-.088.05-.019.013-67.738 38.588c-2.736 1.764-6.192 1.979-9.125.569l23.588 31.631 51.588 11.257v-.001c2.434-1.761 3.876-4.583 3.875-7.587V87.5c.001 1.488-.793 2.862-2.081 3.606z\" fill=\"#1490df\"/><path d=\"M200 165.625v-4.613l-62.394-35.55-7.531 4.294a9.356 9.356 0 0 1-9.125.569l23.588 31.631 51.588 11.231v.025a9.362 9.362 0 0 0 3.875-7.588z\" opacity=\".05\"/><path d=\"M199.688 168.019l-68.394-38.956-1.219.688c-2.734 1.766-6.19 1.984-9.125.575l23.588 31.631 51.587 11.256v.001a9.38 9.38 0 0 0 3.562-5.187z\" opacity=\".1\"/><path d=\"M51.455 90.721c-.733-.467-1.468-1.795-1.455-3.221v78.125c-.007 5.181 4.194 9.382 9.375 9.375h131.25c1.395-.015 2.614-.366 3.813-.813.638-.258 1.252-.652 1.687-.974z\" fill=\"#28a8ea\"/><path d=\"M112.5 141.669V39.581a8.356 8.356 0 0 0-8.331-8.331H62.687v46.6l-10.5 5.987-.031.012-.075.044A4.162 4.162 0 0 0 50 87.5v.031-.031V150h54.169a8.356 8.356 0 0 0 8.331-8.331z\" opacity=\".1\"/><path d=\"M106.25 147.919V45.831a8.356 8.356 0 0 0-8.331-8.331H62.687v40.35l-10.5 5.987-.031.012-.075.044A4.162 4.162 0 0 0 50 87.5v.031-.031 68.75h47.919a8.356 8.356 0 0 0 8.331-8.331z\" opacity=\".2\"/><path d=\"M106.25 135.419V45.831a8.356 8.356 0 0 0-8.331-8.331H62.687v40.35l-10.5 5.987-.031.012-.075.044A4.162 4.162 0 0 0 50 87.5v.031-.031 56.25h47.919a8.356 8.356 0 0 0 8.331-8.331z\" opacity=\".2\"/><path d=\"M100 135.419V45.831a8.356 8.356 0 0 0-8.331-8.331H62.687v40.35l-10.5 5.987-.031.012-.075.044A4.162 4.162 0 0 0 50 87.5v.031-.031 56.25h41.669a8.356 8.356 0 0 0 8.331-8.331z\" opacity=\".2\"/><path d=\"M8.331 37.5h83.337A8.331 8.331 0 0 1 100 45.831v83.338a8.331 8.331 0 0 1-8.331 8.331H8.331A8.331 8.331 0 0 1 0 129.169V45.831A8.331 8.331 0 0 1 8.331 37.5z\" fill=\"#0078d4\"/><path d=\"M24.169 71.675a26.131 26.131 0 0 1 10.263-11.337 31.031 31.031 0 0 1 16.313-4.087 28.856 28.856 0 0 1 15.081 3.875 25.875 25.875 0 0 1 9.988 10.831 34.981 34.981 0 0 1 3.5 15.938 36.881 36.881 0 0 1-3.606 16.662 26.494 26.494 0 0 1-10.281 11.213 30 30 0 0 1-15.656 3.981 29.556 29.556 0 0 1-15.425-3.919 26.275 26.275 0 0 1-10.112-10.85 34.119 34.119 0 0 1-3.544-15.744 37.844 37.844 0 0 1 3.481-16.563zm10.938 26.613a16.975 16.975 0 0 0 5.769 7.463 15.069 15.069 0 0 0 9.019 2.719 15.831 15.831 0 0 0 9.631-2.806 16.269 16.269 0 0 0 5.606-7.481 28.913 28.913 0 0 0 1.787-10.406 31.644 31.644 0 0 0-1.687-10.538 16.681 16.681 0 0 0-5.413-7.75 14.919 14.919 0 0 0-9.544-2.956 15.581 15.581 0 0 0-9.231 2.744 17.131 17.131 0 0 0-5.9 7.519 29.85 29.85 0 0 0-.044 21.5z\" fill=\"#fff\"/></svg>',\n  yahoo:\n    '<svg class=\"atcb-icon-yahoo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 177.803\"><path d=\"M0 43.284h38.144l22.211 56.822 22.5-56.822h37.135L64.071 177.803H26.694l15.308-35.645L.001 43.284zm163.235 45.403H121.64L158.558 0 200 .002zm-30.699 8.488c12.762 0 23.108 10.346 23.108 23.106s-10.345 23.106-23.108 23.106a23.11 23.11 0 0 1-23.104-23.106 23.11 23.11 0 0 1 23.104-23.106z\"/></svg>',\n  close:\n    '<svg class=\"atcb-icon-close\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\"><path d=\"M2.321 13.529a7.927 7.927 0 0 1 0-11.208 7.927 7.927 0 0 1 11.208 0l86.471 86.471L186.47 2.321a7.927 7.927 0 0 1 11.209 0 7.927 7.927 0 0 1 0 11.208l-86.474 86.469 86.472 86.473a7.927 7.927 0 0 1-11.209 11.208l-86.471-86.471-86.469 86.471a7.927 7.927 0 0 1-11.208-11.208l86.471-86.473z\"/></svg>',\n  browser:\n    '<svg class=\"atcb-icon-browser\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 245.657\"><path d=\"M117.011 163.676q-6.283 6.218-13.623 12.419l6.087-1.009a80.373 80.373 0 0 0 11.524-3.255l.7 1.042 1.628 2.067h0 0a26.693 26.693 0 0 0 3.467 3.255 89.992 89.992 0 0 1-15.837 4.753 95.592 95.592 0 0 1-37.159 0 87.046 87.046 0 0 1-17.253-5.322.423.423 0 0 1-.228-.114 101.077 101.077 0 0 1-15.625-8.415 88.56 88.56 0 0 1-13.672-11.214 85.761 85.761 0 0 1-11.214-13.64 97.317 97.317 0 0 1-8.545-15.658 90.806 90.806 0 0 1-5.436-17.546 95.592 95.592 0 0 1 0-37.159 86.037 86.037 0 0 1 5.339-17.253.537.537 0 0 1 .098-.228 98.212 98.212 0 0 1 8.545-15.707 87.893 87.893 0 0 1 11.214-13.656 84.947 84.947 0 0 1 13.672-11.231A97.17 97.17 0 0 1 56.43 7.259a88.739 88.739 0 0 1 17.448-5.436 95.592 95.592 0 0 1 37.159 0 87.714 87.714 0 0 1 17.253 5.322.456.456 0 0 1 .212.114 100.507 100.507 0 0 1 15.756 8.545 88.56 88.56 0 0 1 13.623 11.198 85.077 85.077 0 0 1 11.214 13.688 94.713 94.713 0 0 1 8.545 15.739 88.739 88.739 0 0 1 5.436 17.481l.195.977-8.822-2.49a76.499 76.499 0 0 0-4.232-12.744 88.251 88.251 0 0 0-4.671-9.375H138.48a106.562 106.562 0 0 1 6.836 13.819l-10.026-2.702a106.985 106.985 0 0 0-6.283-11.117H96.454v5.55l-.993.358a21.941 21.941 0 0 0-7.097 4.362V50.245H55.812q-12.484 19.385-14.03 38.152H83.4q1.628 4.02 3.402 8.138H41.7c.505 12.81 4.883 25.505 12.826 38.152h33.888v-34.49l8.138 17.904v16.553h7.748l3.727 8.138H96.503v28.5a201.567 201.567 0 0 0 17.139-15.707q1.709 4.053 3.369 8.138zm69.761-4.167a7.552 7.552 0 0 1-1.904 1.286h-.13a6.738 6.738 0 0 1-7.097-.977l-18.881-16.016-6.511 15.902a21.045 21.045 0 0 1-1.937 3.662 14.812 14.812 0 0 1-2.458 2.865 7.78 7.78 0 0 1-12.207-1.335 15.105 15.105 0 0 1-1.497-2.653c-11.231-28.467-26.465-56.805-37.859-85.289a5.062 5.062 0 0 1 5.68-6.966c27.296 5.046 62.664 16.586 90.416 23.943 8.627 2.279 10.026 9.88 3.662 15.772a19.874 19.874 0 0 1-3.255 2.474c-4.883 2.767-9.766 5.973-14.649 8.903l18.799 16.114a6.917 6.917 0 0 1 1.628 2.051v.13a6.966 6.966 0 0 1 .635 2.393h0a6.934 6.934 0 0 1-.26 2.507 7.145 7.145 0 0 1-1.172 2.262 153.894 153.894 0 0 1-11.003 12.972zm-4.883-6.25l9.099-10.677c-4.004-3.434-21.159-16.748-22.933-19.955a3.923 3.923 0 0 1 1.351-5.29c5.957-3.255 13.607-7.91 19.255-11.67a13.64 13.64 0 0 0 1.986-1.449 7.194 7.194 0 0 0 1.221-1.416l.26-.488-.505-.293a6.38 6.38 0 0 0-1.237-.423l-84.589-22.494 35.531 79.982a7.813 7.813 0 0 0 .619 1.139l.358.472.456-.326a7.341 7.341 0 0 0 1.188-1.449 12.224 12.224 0 0 0 1.107-2.165c2.653-6.511 5.68-15.414 8.789-21.436l.374-.521a3.906 3.906 0 0 1 5.485-.439l22.201 18.832zM81.594 176.095a171.814 171.814 0 0 1-31.348-33.334h-25.57A83.824 83.824 0 0 0 45.2 162.292a85.956 85.956 0 0 0 14.47 7.813.22.22 0 0 0 .179.114 79.966 79.966 0 0 0 15.69 4.883 106.008 106.008 0 0 0 6.104 1.009zm-62.241-41.44h25.733a82.359 82.359 0 0 1-11.394-38.152H8.138a90.741 90.741 0 0 0 1.628 12.923 78.566 78.566 0 0 0 4.883 15.902 88.153 88.153 0 0 0 4.655 9.375zM8.138 88.397h25.635A88.511 88.511 0 0 1 46.42 50.245H19.353a88.153 88.153 0 0 0-4.704 9.375s0 .114-.114.163A81.236 81.236 0 0 0 9.652 75.49a83.759 83.759 0 0 0-1.628 12.907zm16.488-46.241h27.003A191.606 191.606 0 0 1 82.131 8.708c-2.262.277-4.492.602-6.641 1.058a78.713 78.713 0 0 0-15.87 4.883 89.911 89.911 0 0 0-14.47 7.813 83.824 83.824 0 0 0-20.525 19.532h0zm78.127-33.448a186.577 186.577 0 0 1 30.518 33.448h27.019a79.152 79.152 0 0 0-8.138-9.375 81.073 81.073 0 0 0-12.419-10.205 86.705 86.705 0 0 0-14.405-7.829s-.098 0-.163-.098a79.999 79.999 0 0 0-15.69-4.883c-2.214-.439-4.443-.781-6.657-1.058h0zm-6.25 5.274v28.175h26.84a188.286 188.286 0 0 0-26.84-28.175zm-8.138 157.279v-28.5H60.223a171.993 171.993 0 0 0 28.24 28.5zm0-129.105V13.981a189.295 189.295 0 0 0-26.807 28.175z\"/></svg>',\n};\n\n// INITIALIZE THE SCRIPT AND FUNCTIONALITY\nfunction atcb_init() {\n  // let's get started\n  console.log('add-to-calendar button initialized (version ' + atcbVersion + ')');\n  console.log('See https://github.com/add2cal/add-to-calendar-button for details');\n  // abort if not in a browser\n  if (!isBrowser()) {\n    console.error('no further initialization due to wrong environment (no browser)');\n    return;\n  }\n  // get all placeholders\n  const atcButtons = document.querySelectorAll('.atcb');\n  // if there are some, move on\n  if (atcButtons.length > 0) {\n    // get the amount of already initialized ones first\n    const atcButtonsInitialized = document.querySelectorAll('.atcb-initialized');\n    // generate the buttons one by one\n    for (let i = 0; i < atcButtons.length; i++) {\n      // skip already initialized ones\n      if (atcButtons[parseInt(i)].classList.contains('atcb-initialized')) {\n        continue;\n      }\n      // get JSON from HTML block, but remove real code line breaks before parsing.\n      // use <br> or \\n explicitely in the description to create a line break.\n      let atcbConfig = JSON.parse(\n        atcb_secure_content(atcButtons[parseInt(i)].innerHTML.replace(/(\\r\\n|\\n|\\r)/g, ''), false)\n      );\n      // rewrite config for backwards compatibility\n      atcbConfig = atcb_patch_config(atcbConfig);\n      // check, if all required data is available\n      if (atcb_check_required(atcbConfig)) {\n        // Rewrite dynamic dates, standardize line breaks and transform urls in the description\n        atcbConfig = atcb_decorate_data(atcbConfig);\n        // validate the config (JSON iput) ...\n        if (atcb_validate(atcbConfig)) {\n          // ... and generate the button on success\n          // set identifier\n          if (atcbConfig.identifier == null || atcbConfig.identifier == '') {\n            atcbConfig.identifier = 'atcb-btn-' + (i + atcButtonsInitialized.length + 1);\n          }\n          // generate the button\n          atcb_generate(atcButtons[parseInt(i)], atcbConfig);\n        }\n      }\n    }\n  }\n}\n\n// BACKWARDS COMPATIBILITY REWRITE\nfunction atcb_patch_config(atcbConfig) {\n  // you can remove this, if you did not use this script before v1.10.0\n  // adjusts any old schema.org structure\n  if (atcbConfig.event != null) {\n    Object.keys(atcbConfig.event).forEach((key) => {\n      // move entries one level up, but skip schema types\n      if (key.charAt(0) !== '@') {\n        atcbConfig[`${key}`] = atcbConfig.event[`${key}`];\n      }\n    });\n    delete atcbConfig.event;\n  }\n  // you can remove this, if you did not use this script before v1.4.0\n  // adjust deprecated config options\n  const keyChanges = {\n    title: 'name',\n    dateStart: 'startDate',\n    dateEnd: 'endDate',\n    timeStart: 'startTime',\n    timeEnd: 'endTime',\n  };\n  Object.keys(keyChanges).forEach((key) => {\n    if (atcbConfig[keyChanges[`${key}`]] == null && atcbConfig[`${key}`] != null) {\n      atcbConfig[keyChanges[`${key}`]] = atcbConfig[`${key}`];\n    }\n  });\n  return atcbConfig;\n}\n\n// CLEAN DATA BEFORE FURTHER VALIDATION (CONSIDERING SPECIAL RULES AND SCHEMES)\nfunction atcb_decorate_data(atcbConfig) {\n  // cleanup options\n  for (let i = 0; i < atcbConfig.options.length; i++) {\n    let cleanOption = atcbConfig.options[`${i}`].split('|');\n    atcbConfig.options[`${i}`] = cleanOption[0].toLowerCase().replace('microsoft', 'ms').replace('.', '');\n  }\n  // cleanup different date-time formats\n  atcbConfig = atcb_date_cleanup(atcbConfig);\n  // calculate the real date values in case that there are some special rules included (e.g. adding days dynamically)\n  atcbConfig.startDate = atcb_date_calculation(atcbConfig.startDate);\n  atcbConfig.endDate = atcb_date_calculation(atcbConfig.endDate);\n  // set default listStyle\n  if (atcbConfig.listStyle == null || atcbConfig.listStyle == '') {\n    atcbConfig.listStyle = 'dropdown';\n  }\n  // force click trigger on modal style\n  if (atcbConfig.listStyle === 'modal') {\n    atcbConfig.trigger = 'click';\n  }\n  // set size\n  if (atcbConfig.size != null && atcbConfig.size != '' && atcbConfig.size >= 0 && atcbConfig.size < 11) {\n    atcbConfig.size = 10 + parseInt(atcbConfig.size);\n  } else {\n    atcbConfig.size = 16;\n  }\n  // determine dark mode\n  if (atcbConfig.lightMode == null || atcbConfig.lightMode == '') {\n    atcbConfig.lightMode = 'light';\n  } else if (atcbConfig.lightMode != null && atcbConfig.lightMode != '') {\n    const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');\n    switch (atcbConfig.lightMode) {\n      case 'system':\n        if (prefersDarkScheme.matches) {\n          atcbConfig.lightMode = 'dark';\n        } else {\n          atcbConfig.lightMode = 'light';\n        }\n        break;\n      case 'bodyScheme':\n      case 'dark':\n        break;\n      default:\n        atcbConfig.lightMode = 'light';\n        break;\n    }\n  }\n  // set language if not set\n  if (atcbConfig.language == null || atcbConfig.language == '') {\n    atcbConfig.language = 'en';\n  }\n  // format RRULE (remove spaces)\n  if (atcbConfig.recurrence != null && atcbConfig.recurrence != '') {\n    atcbConfig.recurrence = atcbConfig.recurrence.replace(/\\s+/g, '');\n  }\n\n  // if no description or already decorated, return early here\n  if (!atcbConfig.description || atcbConfig.descriptionHtmlFree) return atcbConfig;\n\n  // make a copy of the given argument rather than mutating in place\n  const data = Object.assign({}, atcbConfig);\n  // store a clean description copy without the URL magic for iCal\n  data.descriptionHtmlFree = atcb_rewrite_html_elements(data.description, true);\n  // ...and transform pseudo elements for the regular one\n  data.description = atcb_rewrite_html_elements(data.description);\n  return data;\n}\n\n// CHECK FOR REQUIRED FIELDS\nfunction atcb_check_required(data) {\n  // check for at least 1 option\n  if (data.options == null || data.options.length < 1) {\n    console.error('add-to-calendar button generation failed: no options set');\n    return false;\n  }\n  // check for min required data (without \"options\")\n  const requiredField = ['name', 'startDate'];\n  return requiredField.every(function (field) {\n    if (data[`${field}`] == null || data[`${field}`] == '') {\n      console.error('add-to-calendar button generation failed: required setting missing [' + field + ']');\n      return false;\n    }\n    return true;\n  });\n}\n\n// CALCULATE AND CLEAN UP THE ACTUAL DATES\nfunction atcb_date_cleanup(data) {\n  // set endDate = startDate, if not provided\n  if ((data.endDate == null || data.endDate == '') && data.startDate != null) {\n    data.endDate = data.startDate;\n  }\n  // parse date+time format (unofficial alternative to the main implementation)\n  const endpoints = ['start', 'end'];\n  endpoints.forEach(function (point) {\n    if (data[point + 'Date'] != null) {\n      // remove any milliseconds information\n      data[point + 'Date'] = data[point + 'Date'].replace(/\\.\\d{3}/, '').replace('Z', '');\n      // identify a possible time information within the date string\n      const tmpSplitStartDate = data[point + 'Date'].split('T');\n      if (tmpSplitStartDate[1] != null) {\n        data[point + 'Date'] = tmpSplitStartDate[0];\n        data[point + 'Time'] = tmpSplitStartDate[1];\n      }\n    }\n    // remove any seconds from time information\n    if (data[point + 'Time'] != null && data[point + 'Time'].length === 8) {\n      const timeStr = data[point + 'Time'];\n      data[point + 'Time'] = timeStr.substring(0, timeStr.length - 3);\n    }\n  });\n  return data;\n}\n\nfunction atcb_date_calculation(dateString) {\n  // replace \"today\" with the current date first\n  const today = new Date();\n  const todayString = today.getUTCMonth() + 1 + '-' + today.getUTCDate() + '-' + today.getUTCFullYear();\n  dateString = dateString.replace(/today/gi, todayString);\n  // check for any dynamic additions and adjust\n  const dateStringParts = dateString.split('+');\n  const dateParts = dateStringParts[0].split('-');\n  let newDate = new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);\n  if (dateParts[0].length < 4) {\n    // backwards compatibility for version <1.5.0\n    newDate = new Date(dateParts[2], dateParts[0] - 1, dateParts[1]);\n  }\n  if (dateStringParts[1] != null && dateStringParts[1] > 0) {\n    newDate.setDate(newDate.getDate() + parseInt(dateStringParts[1]));\n  }\n  return (\n    newDate.getFullYear() +\n    '-' +\n    ((newDate.getMonth() + 1 < 10 ? '0' : '') + (newDate.getMonth() + 1)) +\n    '-' +\n    (newDate.getDate() < 10 ? '0' : '') +\n    newDate.getDate()\n  );\n}\n\n// VALIDATE THE INPUT DATA\nfunction atcb_validate(data) {\n  // validate prefix\n  if (data.identifier != null && data.identifier != '') {\n    if (!/^[\\w-]+$/.test(data.identifier)) {\n      data.identifier = '';\n      console.error('add-to-calendar button generation: identifier invalid - using auto numbers instead');\n    }\n  }\n  // validate explicit ics file\n  if (data.icsFile != null && data.icsFile != '') {\n    if (!atcb_secure_url(data.icsFile, false) || !/\\.ics$/.test(data.icsFile)) {\n      console.error('add-to-calendar button generation failed: explicit ics file path not valid');\n      return false;\n    }\n  }\n  // validate options\n  const options = ['apple', 'google', 'ical', 'ms365', 'outlookcom', 'msteams', 'yahoo'];\n  const validRecurrOptions = ['apple', 'google', 'ical'];\n  if (\n    !data.options.every(function (option) {\n      const cleanOption = option.split('|');\n      if (!options.includes(cleanOption[0])) {\n        console.error('add-to-calendar button generation failed: invalid option [' + cleanOption[0] + ']');\n        return false;\n      }\n      return true;\n    })\n  ) {\n    return false;\n  }\n  if ((data.recurrence != null) & (data.recurrence != '')) {\n    let oneValidOption = false;\n    data.options.forEach(function (option) {\n      const cleanOption = option.split('|');\n      if (validRecurrOptions.includes(cleanOption[0])) {\n        oneValidOption = true;\n      }\n    });\n    if (!oneValidOption) {\n      console.error(\n        'add-to-calendar button generation failed: no supported valid option for recurring events'\n      );\n      return false;\n    }\n  }\n  // validate date\n  const dates = ['startDate', 'endDate'];\n  const newDate = dates;\n  if (\n    !dates.every(function (date) {\n      if (data[`${date}`].length !== 10) {\n        console.error('add-to-calendar button generation failed: date misspelled [-> YYYY-MM-DD]');\n        return false;\n      }\n      const dateParts = data[`${date}`].split('-');\n      if (dateParts.length < 3 || dateParts.length > 3) {\n        console.error(\n          'add-to-calendar button generation failed: date misspelled [' + date + ': ' + data[`${date}`] + ']'\n        );\n        return false;\n      }\n      newDate[`${date}`] = new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);\n      return true;\n    })\n  ) {\n    return false;\n  }\n  // validate time\n  const times = ['startTime', 'endTime'];\n  if (\n    !times.every(function (time) {\n      if (data[`${time}`] != null) {\n        if (data[`${time}`].length !== 5) {\n          console.error('add-to-calendar button generation failed: time misspelled [-> HH:MM]');\n          return false;\n        }\n        const timeParts = data[`${time}`].split(':');\n        // validate the time parts\n        if (timeParts.length < 2 || timeParts.length > 2) {\n          console.error(\n            'add-to-calendar button generation failed: time misspelled [' +\n              time +\n              ': ' +\n              data[`${time}`] +\n              ']'\n          );\n          return false;\n        }\n        if (timeParts[0] > 23) {\n          console.error(\n            'add-to-calendar button generation failed: time misspelled - hours number too high [' +\n              time +\n              ': ' +\n              timeParts[0] +\n              ']'\n          );\n          return false;\n        }\n        if (timeParts[1] > 59) {\n          console.error(\n            'add-to-calendar button generation failed: time misspelled - minutes number too high [' +\n              time +\n              ': ' +\n              timeParts[1] +\n              ']'\n          );\n          return false;\n        }\n        // update the date with the time for further validation steps\n        if (time == 'startTime') {\n          newDate.startDate = new Date(\n            newDate.startDate.getTime() + timeParts[0] * 3600000 + timeParts[1] * 60000\n          );\n        }\n        if (time == 'endTime') {\n          newDate.endDate = new Date(\n            newDate.endDate.getTime() + timeParts[0] * 3600000 + timeParts[1] * 60000\n          );\n        }\n      }\n      return true;\n    })\n  ) {\n    return false;\n  }\n  if ((data.startTime != null && data.endTime == null) || (data.startTime == null && data.endTime != null)) {\n    console.error(\n      'add-to-calendar button generation failed: if you set a starting time, you also need to define an end time'\n    );\n    return false;\n  }\n  // validate whether end is not before start\n  if (newDate.endDate < newDate.startDate) {\n    console.error('add-to-calendar button generation failed: end date before start date');\n    return false;\n  }\n  // validate any given RRULE (or respective other parameters)\n  if (data.recurrence != null && data.recurrence != '') {\n    if (!/^[\\w=;:*+-/\\\\]+$/.test(data.recurrence)) {\n      console.error('add-to-calendar button generation failed: RRULE data misspelled');\n      return false;\n    }\n  }\n  // on passing the validation, return true\n  return true;\n}\n\n// GENERATE THE ACTUAL BUTTON\n// helper function to generate the labels for the button and list options\nfunction atcb_generate_label(data, parent, type, icon = false, text = '', oneOption = false) {\n  let defaultTriggerText = atcb_translate_hook('Add to Calendar', data.language, data);\n  // if there is only 1 option, we use the trigger text on the option label. Therefore, forcing it here\n  if (oneOption && text == '') {\n    text = defaultTriggerText;\n  }\n  switch (type) {\n    case 'trigger':\n    default:\n      if (data.trigger === 'click') {\n        parent.addEventListener('click', (event) => {\n          event.preventDefault();\n          atcb_toggle('auto', data, parent, false, true);\n        });\n      } else {\n        parent.addEventListener('touchend', (event) => {\n          event.preventDefault();\n          atcb_toggle('auto', data, parent, false, true);\n        });\n        parent.addEventListener(\n          'mouseenter',\n          atcb_debounce_leading((event) => {\n            event.preventDefault();\n            atcb_toggle('open', data, parent, false, true);\n          })\n        );\n      }\n      parent.id = data.identifier;\n      text = text || defaultTriggerText;\n      break;\n    case 'apple':\n      parent.addEventListener(\n        'click',\n        atcb_debounce(() => {\n          oneOption ? parent.blur() : atcb_toggle('close');\n          atcb_generate_ical(data);\n        })\n      );\n      parent.id = data.identifier + '-apple';\n      text = text || 'Apple';\n      break;\n    case 'google':\n      parent.addEventListener(\n        'click',\n        atcb_debounce(() => {\n          oneOption ? parent.blur() : atcb_toggle('close');\n          atcb_generate_google(data);\n        })\n      );\n      parent.id = data.identifier + '-google';\n      text = text || 'Google';\n      break;\n    case 'ical':\n      parent.addEventListener(\n        'click',\n        atcb_debounce(() => {\n          oneOption ? parent.blur() : atcb_toggle('close');\n          atcb_generate_ical(data);\n        })\n      );\n      parent.id = data.identifier + '-ical';\n      text = text || atcb_translate_hook('iCal File', data.language, data);\n      break;\n    case 'msteams':\n      parent.addEventListener(\n        'click',\n        atcb_debounce(() => {\n          oneOption ? parent.blur() : atcb_toggle('close');\n          atcb_generate_teams(data);\n        })\n      );\n      parent.id = data.identifier + '-msteams';\n      text = text || 'Microsoft Teams';\n      break;\n    case 'ms365':\n      parent.addEventListener(\n        'click',\n        atcb_debounce(() => {\n          oneOption ? parent.blur() : atcb_toggle('close');\n          atcb_generate_microsoft(data, '365');\n        })\n      );\n      parent.id = data.identifier + '-ms365';\n      text = text || 'Microsoft 365';\n      break;\n    case 'outlookcom':\n      parent.addEventListener(\n        'click',\n        atcb_debounce(() => {\n          oneOption ? parent.blur() : atcb_toggle('close');\n          atcb_generate_microsoft(data, 'outlook');\n        })\n      );\n      parent.id = data.identifier + '-outlook';\n      text = text || 'Outlook.com';\n      break;\n    case 'yahoo':\n      parent.addEventListener(\n        'click',\n        atcb_debounce(() => {\n          oneOption ? parent.blur() : atcb_toggle('close');\n          atcb_generate_yahoo(data);\n        })\n      );\n      parent.id = data.identifier + '-yahoo';\n      text = text || 'Yahoo';\n      break;\n    case 'close':\n      parent.addEventListener(\n        'click',\n        atcb_debounce(() => {\n          oneOption ? parent.blur() : atcb_toggle('close');\n        })\n      );\n      parent.addEventListener(\n        'focus',\n        atcb_debounce(() => atcb_close(false))\n      );\n      parent.id = data.identifier + '-close';\n      text = atcb_translate_hook('Close', data.language, data);\n      break;\n  }\n  // override the id for the oneOption button, since the button always needs to have the button id\n  if (oneOption) {\n    parent.id = data.identifier;\n  }\n  // support keyboard input\n  if (!oneOption && type === 'trigger') {\n    parent.addEventListener(\n      'keyup',\n      atcb_debounce_leading((event) => {\n        if (event.key == 'Enter') {\n          event.preventDefault();\n          atcb_toggle('auto', data, parent, true, true);\n        }\n      })\n    );\n  } else {\n    parent.addEventListener(\n      'keyup',\n      atcb_debounce_leading((event) => {\n        if (event.key == 'Enter') {\n          event.preventDefault();\n          parent.click();\n        }\n      })\n    );\n  }\n  // add icon and text label\n  if (icon) {\n    const iconEl = document.createElement('span');\n    iconEl.classList.add('atcb-icon');\n    iconEl.innerHTML = atcbIcon[`${type}`];\n    parent.appendChild(iconEl);\n  }\n  const textEl = document.createElement('span');\n  textEl.classList.add('atcb-text');\n  textEl.textContent = text;\n  parent.appendChild(textEl);\n}\n\n// generate the triggering button\nfunction atcb_generate(button, data) {\n  // clean the placeholder\n  button.textContent = '';\n  // create schema.org data, if possible (https://schema.org/Event)\n  // TODO: support recurring events\n  if (data.name && data.location && data.startDate) {\n    const schemaEl = document.createElement('script');\n    schemaEl.type = 'application/ld+json';\n    schemaEl.textContent = '{ \"event\": { \"@context\":\"https://schema.org\", \"@type\":\"Event\", ';\n    schemaEl.textContent += '\"name\":\"' + data.name + '\", ';\n    if (data.descriptionHtmlFree)\n      schemaEl.textContent += '\"description\":\"' + data.descriptionHtmlFree + '\", ';\n    const formattedDate = atcb_generate_time(data, 'delimiters', 'general', true);\n    schemaEl.textContent += '\"startDate\":\"' + formattedDate.start + '\", ';\n    schemaEl.textContent += '\"endDate\":\"' + formattedDate.end + '\", ';\n    if (data.location.startsWith('http')) {\n      schemaEl.textContent += '\"eventAttendanceMode\":\"https://schema.org/OnlineEventAttendanceMode\", ';\n      schemaEl.textContent += '\"location\": { \"@type\":\"VirtualLocation\", \"url\":\"' + data.location + '\" } ';\n    } else {\n      schemaEl.textContent += '\"location\":\"' + data.location + '\" ';\n    }\n    schemaEl.textContent += '} }';\n    button.appendChild(schemaEl);\n  }\n  // generate the wrapper div\n  const buttonTriggerWrapper = document.createElement('div');\n  buttonTriggerWrapper.classList.add('atcb-button-wrapper');\n  buttonTriggerWrapper.classList.add('atcb-' + data.lightMode);\n  buttonTriggerWrapper.style.fontSize = data.size + 'px';\n  button.appendChild(buttonTriggerWrapper);\n  // generate the button trigger div\n  const buttonTrigger = document.createElement('button');\n  buttonTrigger.classList.add('atcb-button');\n  if (data.listStyle === 'overlay') {\n    buttonTrigger.classList.add('atcb-dropoverlay');\n  }\n  buttonTrigger.type = 'button';\n  buttonTriggerWrapper.appendChild(buttonTrigger);\n  // generate the label incl. eventListeners\n  // if there is only 1 calendar option, we directly show this at the button, but with the trigger's label text\n  if (data.options.length === 1) {\n    const optionParts = data.options[0].split('|');\n    buttonTrigger.classList.add('atcb-single');\n    atcb_generate_label(data, buttonTrigger, optionParts[0], true, data.label, true);\n  } else {\n    atcb_generate_label(data, buttonTrigger, 'trigger', true, data.label);\n    // create an empty anchor div to place the dropdown, while the position can be defined via CSS\n    const buttonDropdownAnchor = document.createElement('div');\n    buttonDropdownAnchor.classList.add('atcb-dropdown-anchor');\n    buttonTrigger.appendChild(buttonDropdownAnchor);\n  }\n  // update the placeholder class to prevent multiple initializations\n  button.classList.remove('atcb');\n  button.classList.add('atcb-initialized');\n  // show the placeholder div\n  if (data.inline) {\n    button.style.display = 'inline-block';\n  } else {\n    button.style.display = 'block';\n  }\n  // console log\n  console.log('add-to-calendar button \"' + data.identifier + '\" created');\n}\n\n// generate the dropdown list (can also appear wihtin a modal, if option is set)\nfunction atcb_generate_dropdown_list(data) {\n  const optionsList = document.createElement('div');\n  optionsList.classList.add('atcb-list');\n  optionsList.classList.add('atcb-' + data.lightMode);\n  optionsList.style.fontSize = data.size + 'px';\n  // generate the list items\n  let listCount = 0;\n  data.options.forEach(function (option) {\n    const optionParts = option.split('|');\n    // skip the option if not supported\n    if (data.recurrence != null && data.recurrence != '') {\n      if (\n        optionParts[0] == 'msteams' ||\n        optionParts[0] == 'ms365' ||\n        optionParts[0] == 'outlookcom' ||\n        optionParts[0] == 'yahoo'\n      ) {\n        return;\n      }\n    }\n    const optionItem = document.createElement('div');\n    optionItem.classList.add('atcb-list-item');\n    optionItem.tabIndex = 0;\n    listCount++;\n    optionItem.dataset.optionNumber = listCount;\n    optionsList.appendChild(optionItem);\n    // generate the label incl. individual eventListener\n    atcb_generate_label(data, optionItem, optionParts[0], true, optionParts[1]);\n  });\n  // in the modal case, we also render a close option\n  if (data.listStyle === 'modal') {\n    const optionItem = document.createElement('div');\n    optionItem.classList.add('atcb-list-item', 'atcb-list-item-close');\n    optionItem.tabIndex = 0;\n    optionsList.appendChild(optionItem);\n    atcb_generate_label(data, optionItem, 'close', true);\n  }\n  return optionsList;\n}\n\n// create the background overlay, which also acts as trigger to close any dropdowns\nfunction atcb_generate_bg_overlay(listStyle = 'dropdown', trigger = '', darken = true) {\n  const bgOverlay = document.createElement('div');\n  bgOverlay.id = 'atcb-bgoverlay';\n  if (listStyle !== 'modal' && darken) {\n    bgOverlay.classList.add('atcb-animate-bg');\n  }\n  if (!darken) {\n    bgOverlay.classList.add('atcb-no-bg');\n  }\n  bgOverlay.tabIndex = 0;\n  bgOverlay.addEventListener(\n    'click',\n    atcb_debounce((e) => {\n      if (e.target !== e.currentTarget) return;\n      atcb_toggle('close');\n    })\n  );\n  let fingerMoved = false;\n  bgOverlay.addEventListener(\n    'touchstart',\n    atcb_debounce_leading(() => (fingerMoved = false)),\n    { passive: true }\n  );\n  bgOverlay.addEventListener(\n    'touchmove',\n    atcb_debounce_leading(() => (fingerMoved = true)),\n    { passive: true }\n  );\n  bgOverlay.addEventListener(\n    'touchend',\n    atcb_debounce((e) => {\n      if (fingerMoved !== false || e.target !== e.currentTarget) return;\n      atcb_toggle('close');\n    }),\n    { passive: true }\n  );\n  bgOverlay.addEventListener(\n    'focus',\n    atcb_debounce_leading((e) => {\n      if (e.target !== e.currentTarget) return;\n      atcb_toggle('close');\n    })\n  );\n  if (trigger !== 'click') {\n    bgOverlay.addEventListener(\n      'mousemove',\n      atcb_debounce_leading((e) => {\n        if (e.target !== e.currentTarget) return;\n        atcb_toggle('close');\n      })\n    );\n  } else {\n    // if trigger is not set to 'click', we render a close icon, when hovering over the background\n    bgOverlay.classList.add('atcb-click');\n  }\n  return bgOverlay;\n}\n\n// FUNCTIONS TO CONTROL THE INTERACTION\nfunction atcb_toggle(action, data = '', button = '', keyboardTrigger = false, generatedButton = false) {\n  // check for state and adjust accordingly\n  // action can be 'open', 'close', or 'auto'\n  if (action == 'open') {\n    atcb_open(data, button, keyboardTrigger, generatedButton);\n  } else if (\n    action == 'close' ||\n    button.classList.contains('atcb-active') ||\n    document.querySelector('.atcb-active-modal')\n  ) {\n    atcb_close(keyboardTrigger);\n  } else {\n    atcb_open(data, button, keyboardTrigger, generatedButton);\n  }\n}\n\n// show the dropdown list + background overlay\nfunction atcb_open(data, button, keyboardTrigger = false, generatedButton = false) {\n  // abort early if an add-to-calendar dropdown or modal already opened\n  if (document.querySelector('.atcb-list') || document.querySelector('.atcb-modal')) return;\n  // generate list and prepare wrapper\n  const list = atcb_generate_dropdown_list(data);\n  const listWrapper = document.createElement('div');\n  listWrapper.classList.add('atcb-list-wrapper');\n  // set list styles, set button to atcb-active and force modal listStyle if no button is set\n  if (button) {\n    button.classList.add('atcb-active');\n    if (data.listStyle === 'modal') {\n      button.classList.add('atcb-modal-style');\n      list.classList.add('atcb-modal');\n    } else {\n      listWrapper.appendChild(list);\n      listWrapper.classList.add('atcb-dropdown');\n      if (data.listStyle === 'overlay') {\n        listWrapper.classList.add('atcb-dropoverlay');\n      }\n    }\n    if (generatedButton) {\n      list.classList.add('atcb-generated-button'); // if the button has been generated by the script, we add some more specifics\n    }\n  } else {\n    list.classList.add('atcb-modal');\n  }\n  // define background overlay\n  const bgOverlay = atcb_generate_bg_overlay(data.listStyle, data.trigger, data.background);\n  // render the items depending on the liststyle\n  if (data.listStyle === 'modal') {\n    document.body.appendChild(bgOverlay);\n    bgOverlay.appendChild(list);\n    document.body.classList.add('atcb-modal-no-scroll');\n  } else {\n    document.body.appendChild(listWrapper);\n    listWrapper.appendChild(list);\n    document.body.appendChild(bgOverlay);\n    if (data.listStyle === 'dropdown-static') {\n      // in the dropdown-static case, we do not dynamically adjust whether we show the dropdown upwards\n      atcb_position_list(button, listWrapper, true);\n    } else {\n      atcb_position_list(button, listWrapper);\n    }\n  }\n  // set overlay size just to be sure\n  atcb_set_fullsize(bgOverlay);\n  // give keyboard focus to first item in list, if not blocked, because there is definitely no keyboard trigger\n  if (keyboardTrigger) {\n    list.firstChild.focus();\n  } else {\n    list.firstChild.focus({ preventScroll: true });\n  }\n  list.firstChild.blur();\n}\n\nfunction atcb_close(keyboardTrigger = false) {\n  // focus triggering button if available - especially relevant for keyboard navigation\n  let newFocusEl = document.querySelector('.atcb-active, .atcb-active-modal');\n  if (newFocusEl) {\n    newFocusEl.focus({ preventScroll: true });\n    if (!keyboardTrigger) {\n      newFocusEl.blur();\n    }\n  }\n  // inactivate all buttons\n  Array.from(document.querySelectorAll('.atcb-active')).forEach((button) => {\n    button.classList.remove('atcb-active');\n  });\n  Array.from(document.querySelectorAll('.atcb-active-modal')).forEach((button) => {\n    button.classList.remove('atcb-active-modal');\n  });\n  // make body scrollable again\n  document.body.classList.remove('atcb-modal-no-scroll');\n  // remove dropdowns, modals, and bg overlays (should only be one of each at max)\n  Array.from(document.querySelectorAll('.atcb-list-wrapper'))\n    .concat(Array.from(document.querySelectorAll('.atcb-list')))\n    .concat(Array.from(document.querySelectorAll('.atcb-info-modal')))\n    .concat(Array.from(document.querySelectorAll('#atcb-bgoverlay')))\n    .forEach((el) => el.remove());\n}\n\n// prepare data when not using the init function\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction atcb_action(data, triggerElement, keyboardTrigger = true) {\n  data = atcb_secure_content(data);\n  // validate & decorate data\n  if (!atcb_check_required(data)) {\n    throw new Error('data missing; see logs');\n  }\n  data = atcb_decorate_data(data);\n  if (!atcb_validate(data)) {\n    throw new Error('Invalid data; see logs');\n  }\n  if (triggerElement) {\n    data.identifier = triggerElement.id;\n    // if listStyle some dropdown one, force overlay\n    if (data.listStyle != 'modal') {\n      data.listStyle = 'overlay';\n    }\n  } else {\n    data.identifier = 'atcb-btn-custom';\n    // if no button is defined, fallback to listStyle \"modal\" and \"click\" trigger\n    data.listStyle = 'modal';\n    data.trigger = 'click';\n  }\n  atcb_toggle('open', data, triggerElement, keyboardTrigger);\n}\n\n// FUNCTION TO GENERATE THE GOOGLE URL\n// See specs at: TODO\nfunction atcb_generate_google(data) {\n  // base url\n  let url = 'https://calendar.google.com/calendar/render?action=TEMPLATE';\n  // generate and add date\n  const formattedDate = atcb_generate_time(data, 'clean', 'google');\n  url += '&dates=' + encodeURIComponent(formattedDate.start) + '%2F' + encodeURIComponent(formattedDate.end);\n  // add details (if set)\n  if (data.name != null && data.name != '') {\n    url += '&text=' + encodeURIComponent(data.name);\n  }\n  let tmpDataDescription = '';\n  if (data.description != null && data.description != '') {\n    tmpDataDescription = data.description;\n  }\n  if (data.location != null && data.location != '') {\n    url += '&location=' + encodeURIComponent(data.location);\n    // TODO: Find a better solution for the next temporary workaround.\n    if (isiOS()) {\n      // workaround to cover a bug, where, when using Google Calendar on an iPhone, the location is not recognized. So, for the moment, we simply add it to the description.\n      if (tmpDataDescription != '') {\n        tmpDataDescription += '<br><br>';\n      }\n      tmpDataDescription += '&#128205;: ' + data.location;\n    }\n  }\n  if (tmpDataDescription != '') {\n    url += '&details=' + encodeURIComponent(tmpDataDescription);\n  }\n  if (data.recurrence != null && data.recurrence != '') {\n    url += '&recur=' + encodeURIComponent(data.recurrence);\n  }\n  if (atcb_secure_url(url)) {\n    // eslint-disable-next-line security/detect-non-literal-fs-filename\n    window.open(url, atcbDefaultTarget).focus();\n  }\n}\n\n// FUNCTION TO GENERATE THE YAHOO URL\n// See specs at: TODO\nfunction atcb_generate_yahoo(data) {\n  // base url\n  let url = 'https://calendar.yahoo.com/?v=60';\n  // generate and add date\n  const formattedDate = atcb_generate_time(data, 'clean');\n  url += '&st=' + encodeURIComponent(formattedDate.start) + '&et=' + encodeURIComponent(formattedDate.end);\n  if (formattedDate.allday) {\n    url += '&dur=allday';\n  }\n  // add details (if set)\n  if (data.name != null && data.name != '') {\n    url += '&title=' + encodeURIComponent(data.name);\n  }\n  if (data.location != null && data.location != '') {\n    url += '&in_loc=' + encodeURIComponent(data.location);\n  }\n  if (data.descriptionHtmlFree != null && data.descriptionHtmlFree != '') {\n    // using descriptionHtmlFree instead of description, since Yahoo does not support html tags in a stable way\n    url += '&desc=' + encodeURIComponent(data.descriptionHtmlFree);\n  }\n  if (atcb_secure_url(url)) {\n    // eslint-disable-next-line security/detect-non-literal-fs-filename\n    window.open(url, atcbDefaultTarget).focus();\n  }\n}\n\n// FUNCTION TO GENERATE THE MICROSOFT 365 OR OUTLOOK WEB URL\n// See specs at: TODO\nfunction atcb_generate_microsoft(data, type = '365') {\n  // redirect to iCal solution on mobile devices, since the Microsoft web apps are buggy on mobile devices (see https://github.com/add2cal/add-to-calendar-button/discussions/113)\n  if (isMobile()) {\n    atcb_generate_ical(data);\n    return;\n  }\n  // base url\n  let url = 'https://';\n  if (type == 'outlook') {\n    url += 'outlook.live.com';\n  } else {\n    url += 'outlook.office.com';\n  }\n  url += '/calendar/0/deeplink/compose?path=%2Fcalendar%2Faction%2Fcompose&rru=addevent';\n  // generate and add date\n  const formattedDate = atcb_generate_time(data, 'delimiters', 'microsoft');\n  url +=\n    '&startdt=' + encodeURIComponent(formattedDate.start) + '&enddt=' + encodeURIComponent(formattedDate.end);\n  if (formattedDate.allday) {\n    url += '&allday=true';\n  }\n  // add details (if set)\n  if (data.name != null && data.name != '') {\n    url += '&subject=' + encodeURIComponent(data.name);\n  }\n  if (data.location != null && data.location != '') {\n    url += '&location=' + encodeURIComponent(data.location);\n  }\n  if (data.description != null && data.description != '') {\n    url += '&body=' + encodeURIComponent(data.description.replace(/\\n/g, '<br>'));\n  }\n  if (atcb_secure_url(url)) {\n    // eslint-disable-next-line security/detect-non-literal-fs-filename\n    window.open(url, atcbDefaultTarget).focus();\n  }\n}\n\n// FUNCTION TO GENERATE THE MICROSOFT TEAMS URL\n// See specs at: https://docs.microsoft.com/en-us/microsoftteams/platform/concepts/build-and-test/deep-links#deep-linking-to-the-scheduling-dialog\n// Mind that this is still in development mode by Microsoft! Location, html tags and linebreaks in the description are not supported yet.\nfunction atcb_generate_teams(data) {\n  // base url\n  let url = 'https://teams.microsoft.com/l/meeting/new?';\n  // generate and add date\n  const formattedDate = atcb_generate_time(data, 'delimiters', 'microsoft');\n  url +=\n    '&startTime=' +\n    encodeURIComponent(formattedDate.start) +\n    '&endTime=' +\n    encodeURIComponent(formattedDate.end);\n  // add details (if set)\n  let locationString = '';\n  if (data.name != null && data.name != '') {\n    url += '&subject=' + encodeURIComponent(data.name);\n  }\n  if (data.location != null && data.location != '') {\n    locationString = encodeURIComponent(data.location);\n    url += '&location=' + locationString;\n    locationString += ' // '; // preparing the workaround putting the location into the description, since the native field is not supported yet\n  }\n  if (data.descriptionHtmlFree != null && data.descriptionHtmlFree != '') {\n    // using descriptionHtmlFree instead of description, since Teams does not support html tags\n    url += '&content=' + locationString + encodeURIComponent(data.descriptionHtmlFree);\n  }\n  if (atcb_secure_url(url)) {\n    // eslint-disable-next-line security/detect-non-literal-fs-filename\n    window.open(url, atcbDefaultTarget).focus();\n  }\n}\n\n// FUNCTION TO GENERATE THE iCAL FILE (also for the Apple option)\n// See specs at: https://www.rfc-editor.org/rfc/rfc5545.html\nfunction atcb_generate_ical(data) {\n  // check for a given explicit file (not if iOS and WebView - will catched further down)\n  if (\n    data.icsFile != null &&\n    data.icsFile != '' &&\n    atcb_secure_url(data.icsFile) &&\n    data.icsFile.startsWith('https://') &&\n    (!isiOS() || !isWebView())\n  ) {\n    // eslint-disable-next-line security/detect-non-literal-fs-filename\n    window.open(data.icsFile, atcbDefaultTarget);\n    return;\n  }\n  // otherwise, generate one on the fly\n  let now = new Date();\n  now = now.toISOString();\n  const formattedDate = atcb_generate_time(data, 'clean', 'ical');\n  let timeslot = '';\n  if (formattedDate.allday) {\n    timeslot = ';VALUE=DATE';\n  }\n  const ics_lines = ['BEGIN:VCALENDAR', 'VERSION:2.0'];\n  const corp = 'github.com/add2cal/add-to-calendar-button';\n  ics_lines.push('PRODID:-// ' + corp + ' // atcb v' + atcbVersion + ' //EN');\n  ics_lines.push('CALSCALE:GREGORIAN');\n  ics_lines.push('BEGIN:VEVENT');\n  ics_lines.push('UID:' + now + '@add-to-calendar-button');\n  ics_lines.push(\n    'DTSTAMP:' + formattedDate.start,\n    'DTSTART' + timeslot + ':' + formattedDate.start,\n    'DTEND' + timeslot + ':' + formattedDate.end,\n    'SUMMARY:' + data.name.replace(/.{65}/g, '$&' + '\\r\\n ') // making sure it does not exceed 75 characters per line\n  );\n  if (data.descriptionHtmlFree != null && data.descriptionHtmlFree != '') {\n    ics_lines.push(\n      'DESCRIPTION:' + data.descriptionHtmlFree.replace(/\\n/g, '\\\\n').replace(/.{60}/g, '$&' + '\\r\\n ') // adjusting for intended line breaks + making sure it does not exceed 75 characters per line\n    );\n  }\n  if (data.description != null && data.description != '') {\n    ics_lines.push(\n      'X-ALT-DESC;FMTTYPE=text/html:\\r\\n <!DOCTYPE HTML PUBLIC \"\"-//W3C//DTD HTML 3.2//EN\"\">\\r\\n <HTML><BODY>\\r\\n ' +\n        data.description.replace(/\\n/g, '<br>').replace(/.{60}/g, '$&' + '\\r\\n ') +\n        '\\r\\n </BODY></HTML>'\n    );\n  }\n  if (data.location != null && data.location != '') {\n    ics_lines.push('LOCATION:' + data.location);\n  }\n  if (data.recurrence != null && data.recurrence != '') {\n    ics_lines.push(data.recurrence);\n  }\n  now = now.replace(/\\.\\d{3}/g, '').replace(/[^a-z\\d]/gi, '');\n  ics_lines.push('STATUS:CONFIRMED', 'LAST-MODIFIED:' + now, 'SEQUENCE:0', 'END:VEVENT', 'END:VCALENDAR');\n  let dlurl = 'data:text/calendar;charset=utf-8,' + encodeURIComponent(ics_lines.join('\\r\\n'));\n  const filename = data.iCalFileName || 'event-to-save-in-my-calendar';\n  // if we got to this point with an explicitely given iCal file, we are on an iOS device within an in-app browser (WebView). If the provided URL is save, we override the dlurl\n  if (data.icsFile != null && data.icsFile != '') {\n    if (atcb_secure_url(data.icsFile) && data.icsFile.startsWith('https://')) {\n      dlurl = data.icsFile;\n    }\n  }\n  // in in-app browser cases (WebView), we offer a copy option, since the on-the-fly client side generation is usually not supported\n  // for Android, we are more specific and only go for specific apps at the moment\n  if (isWebView() && (isiOS() || (isAndroid() && isProblematicWebView()))) {\n    // putting the download url to the clipboard\n    const tmpInput = document.createElement('input');\n    document.body.appendChild(tmpInput);\n    var editable = tmpInput.contentEditable;\n    var readOnly = tmpInput.readOnly;\n    tmpInput.value = dlurl;\n    tmpInput.contentEditable = true;\n    tmpInput.readOnly = false;\n    if (isiOS()) {\n      var range = document.createRange();\n      range.selectNodeContents(tmpInput);\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n      tmpInput.setSelectionRange(0, 999999);\n    } else {\n      // the next 2 lines are basically doing the same in different ways (just to be sure)\n      navigator.clipboard.writeText(dlurl);\n      tmpInput.select();\n    }\n    tmpInput.contentEditable = editable;\n    tmpInput.readOnly = readOnly;\n    document.execCommand('copy');\n    tmpInput.remove();\n    // creating the modal\n    atcb_create_modal(\n      data,\n      'browser',\n      atcb_translate_hook('WebView iCal', data.language, data),\n      atcb_translate_hook('WebView info description', data.language, data)\n    );\n  } else {\n    try {\n      if (!window.ActiveXObject) {\n        const save = document.createElement('a');\n        save.href = dlurl;\n        save.target = atcbDefaultTarget;\n        save.download = filename;\n        const evt = new MouseEvent('click', {\n          view: window,\n          button: 0,\n          bubbles: true,\n          cancelable: false,\n        });\n        save.dispatchEvent(evt);\n        (window.URL || window.webkitURL).revokeObjectURL(save.href);\n      }\n      // for IE < 11 (even no longer officially supported)\n      else if (!!window.ActiveXObject && document.execCommand) {\n        // eslint-disable-next-line security/detect-non-literal-fs-filename\n        const _window = window.open(dlurl, atcbDefaultTarget);\n        _window.document.close();\n        _window.document.execCommand('SaveAs', true, filename || dlurl);\n        _window.close();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// SHARED FUNCTION TO GENERATE A TIME STRING\nfunction atcb_generate_time(data, style = 'delimiters', targetCal = 'general', addTimeZoneOffset = false) {\n  const startDate = data.startDate.split('-');\n  const endDate = data.endDate.split('-');\n  let start = '';\n  let end = '';\n  let allday = false;\n  if (data.startTime != null && data.endTime != null) {\n    // Adjust for timezone, if set (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for either the TZ name or the offset)\n    if (data.timeZoneOffset != null && data.timeZoneOffset != '') {\n      // if we have a timezone offset given, consider it\n      start = new Date(\n        startDate[0] +\n          '-' +\n          startDate[1] +\n          '-' +\n          startDate[2] +\n          'T' +\n          data.startTime +\n          ':00.000' +\n          data.timeZoneOffset\n      );\n      end = new Date(\n        endDate[0] +\n          '-' +\n          endDate[1] +\n          '-' +\n          endDate[2] +\n          'T' +\n          data.endTime +\n          ':00.000' +\n          data.timeZoneOffset\n      );\n    } else {\n      // if there is no offset, we prepare the time, assuming it is UTC formatted\n      start = new Date(\n        startDate[0] + '-' + startDate[1] + '-' + startDate[2] + 'T' + data.startTime + ':00.000+00:00'\n      );\n      end = new Date(endDate[0] + '-' + endDate[1] + '-' + endDate[2] + 'T' + data.endTime + ':00.000+00:00');\n      if (data.timeZone != null && data.timeZone != '') {\n        // if a timezone is given, we adjust dynamically with the modern toLocaleString function\n        const utcDate = new Date(start.toLocaleString('en-US', { timeZone: 'UTC' }));\n        if (data.timeZone == 'currentBrowser') {\n          data.timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        const tzDate = new Date(start.toLocaleString('en-US', { timeZone: data.timeZone }));\n        const calcOffset = utcDate.getTime() - tzDate.getTime();\n        start.setTime(start.getTime() + calcOffset);\n        end.setTime(end.getTime() + calcOffset);\n      }\n    }\n    start = start.toISOString().replace('.000', '');\n    end = end.toISOString().replace('.000', '');\n    if (style == 'clean') {\n      start = start.replace(/-/g, '').replace(/:/g, '');\n      end = end.replace(/-/g, '').replace(/:/g, '');\n    }\n    if (addTimeZoneOffset) {\n      let tzOffsetStart = '';\n      let tzOffsetEnd = '';\n      if (data.timeZoneOffset != null && data.timeZoneOffset != '') {\n        tzOffsetStart = data.timeZoneOffset;\n        tzOffsetEnd = data.timeZoneOffset;\n      } else if (data.timeZone != null && data.timeZone != '') {\n        let tzOffsetDateStart = new Date(start.toLocaleString('sv', { timeZone: data.timeZone }));\n        let tzOffsetStartSearch = tzOffsetDateStart.toString().match(/GMT(.{5})/g);\n        tzOffsetStart = tzOffsetStartSearch[0].replace(/GMT(.{3})(.{2})/g, '$1:$2');\n        let tzOffsetDateEnd = new Date(end.toLocaleString('sv', { timeZone: data.timeZone }));\n        let tzOffsetEndSearch = tzOffsetDateEnd.toString().match(/GMT(.{5})/g);\n        tzOffsetEnd = tzOffsetEndSearch[0].replace(/GMT(.{3})(.{2})/g, '$1:$2');\n      }\n      start = start.slice(0, -1) + tzOffsetStart;\n      end = end.slice(0, -1) + tzOffsetEnd;\n    }\n  } else {\n    // would be an allday event then\n    allday = true;\n    start = new Date(Date.UTC(startDate[0], startDate[1] - 1, startDate[2]));\n    let breakStart = start.toISOString().replace(/T(.+)Z/g, '');\n    end = new Date(Date.UTC(endDate[0], endDate[1] - 1, endDate[2]));\n    if (targetCal == 'google' || targetCal == 'microsoft' || targetCal == 'ical') {\n      end.setDate(end.getDate() + 1); // increment the day by 1 for Google Calendar, iCal and Outlook\n    }\n    let breakEnd = end.toISOString().replace(/T(.+)Z/g, '');\n    if (style == 'clean') {\n      breakStart = breakStart.replace(/-/g, '');\n      breakEnd = breakEnd.replace(/-/g, '');\n    }\n    start = breakStart;\n    end = breakEnd;\n  }\n  const returnObject = { start, end, allday };\n  return returnObject;\n}\n\n// SHARED FUNCTION TO SECURE DATA\nfunction atcb_secure_content(data, isJSON = true) {\n  // strip HTML tags (especially since stupid Safari adds stuff) - except for <br>\n  let toClean;\n  // differentiates between JSON and string input\n  if (isJSON) {\n    toClean = JSON.stringify(data);\n  } else {\n    toClean = data;\n  }\n  toClean = toClean.replace(/(<(?!br)([^>]+)>)/gi, '');\n  if (isJSON) {\n    return JSON.parse(toClean);\n  } else {\n    return toClean;\n  }\n}\n\n// SHARED FUNCTION TO SECURE URLS\nfunction atcb_secure_url(url, throwError = true) {\n  if (\n    url.match(\n      /((\\.\\.\\/)|(\\.\\.\\\\)|(%2e%2e%2f)|(%252e%252e%252f)|(%2e%2e\\/)|(%252e%252e\\/)|(\\.\\.%2f)|(\\.\\.%252f)|(%2e%2e%5c)|(%252e%252e%255c)|(%2e%2e\\\\)|(%252e%252e\\\\)|(\\.\\.%5c)|(\\.\\.%255c)|(\\.\\.%c0%af)|(\\.\\.%25c0%25af)|(\\.\\.%c1%9c)|(\\.\\.%25c1%259c))/gi\n    )\n  ) {\n    if (throwError) {\n      console.error(\n        'Seems like the generated URL includes at least one security issue and got blocked. Please check the calendar button parameters!'\n      );\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n// SHARED FUNCTION TO REPLACE HTML PSEUDO ELEMENTS\nfunction atcb_rewrite_html_elements(content, clear = false) {\n  // standardize any line breaks\n  content = content.replace(/<br\\s*\\/?>/gi, '\\n');\n  // remove any pseudo elements, if necessary\n  if (clear) {\n    content = content.replace(/\\[(|\\/)(url|br|hr|p|b|strong|u|i|em|li|ul|ol|h\\d)\\]|((\\|.*)\\[\\/url\\])/gi, '');\n    // and build html for the rest\n    // supporting: br, hr, p, strong, u, i, em, li, ul, ol, h (like h1, h2, h3, ...), url (= a)\n  } else {\n    content = content.replace(/\\[(\\/|)(br|hr|p|b|strong|u|i|em|li|ul|ol|h\\d)\\]/gi, '<$1$2>');\n    content = content.replace(/\\[url\\]([\\w&$+.,:;=~!*'?@^%#|\\s\\-()/]*)\\[\\/url\\]/gi, function (match, p1) {\n      const urlText = p1.split('|');\n      let link = '<a href=\"' + urlText[0] + '\" target=\"' + atcbDefaultTarget + '\" rel=\"noopener\">';\n      if (urlText.length > 1 && urlText[1] != '') {\n        link += urlText[1];\n      } else {\n        link += urlText[0];\n      }\n      return link + '</a>';\n    });\n  }\n  return content;\n}\n\n// SHARED FUNCTION TO CREATE INFO MODALS\nfunction atcb_create_modal(data, icon = '', headline, content, buttons) {\n  // setting the stage\n  const bgOverlay = atcb_generate_bg_overlay('modal', 'click');\n  const infoModalWrapper = document.createElement('div');\n  infoModalWrapper.classList.add('atcb-modal', 'atcb-info-modal');\n  infoModalWrapper.tabIndex = 0;\n  bgOverlay.appendChild(infoModalWrapper);\n  document.body.appendChild(bgOverlay);\n  document.body.classList.add('atcb-modal-no-scroll');\n  const parentButton = document.getElementById(data.identifier);\n  if (parentButton != null) {\n    parentButton.classList.add('atcb-active-modal');\n  }\n  const infoModal = document.createElement('div');\n  infoModal.classList.add('atcb-modal-box');\n  infoModal.classList.add('atcb-' + data.lightMode);\n  infoModal.style.fontSize = data.size + 'px';\n  infoModalWrapper.appendChild(infoModal);\n  // set overlay size just to be sure\n  atcb_set_fullsize(bgOverlay);\n  // adding closing button\n  const infoModalClose = document.createElement('div');\n  infoModalClose.classList.add('atcb-modal-close');\n  infoModalClose.innerHTML = atcbIcon.close;\n  infoModal.appendChild(infoModalClose);\n  infoModalClose.addEventListener(\n    'click',\n    atcb_debounce(() => atcb_close())\n  );\n  infoModalClose.addEventListener(\n    'keyup',\n    atcb_debounce_leading((event) => {\n      if (event.key == 'Enter') {\n        event.preventDefault();\n        atcb_toggle('close', '', '', true);\n      }\n    })\n  );\n  if (buttons == null || buttons.length == 0) {\n    infoModalClose.tabIndex = 0;\n    infoModalClose.focus();\n  }\n  // adding headline (incl. icon)\n  const infoModalHeadline = document.createElement('div');\n  infoModalHeadline.classList.add('atcb-modal-headline');\n  infoModal.appendChild(infoModalHeadline);\n  if (icon != '') {\n    const infoModalHeadlineIcon = document.createElement('span');\n    infoModalHeadlineIcon.classList.add('atcb-modal-headline-icon');\n    infoModalHeadlineIcon.innerHTML = atcbIcon[`${icon}`];\n    infoModalHeadline.appendChild(infoModalHeadlineIcon);\n  }\n  let infoModalHeadlineText = document.createTextNode(headline);\n  infoModalHeadline.appendChild(infoModalHeadlineText);\n  // and text content\n  const infoModalContent = document.createElement('div');\n  infoModalContent.classList.add('atcb-modal-content');\n  infoModalContent.innerHTML = content;\n  infoModal.appendChild(infoModalContent);\n  // and buttons (array of objects; attributes: href, type, label, primary(boolean))\n  if (buttons != null && buttons.length > 0) {\n    const infoModalButtons = document.createElement('div');\n    infoModalButtons.classList.add('atcb-modal-buttons');\n    infoModal.appendChild(infoModalButtons);\n    buttons.forEach((button, index) => {\n      let infoModalButton;\n      if (button.href != null && button.href != '') {\n        infoModalButton = document.createElement('a');\n        infoModalButton.setAttribute('target', atcbDefaultTarget);\n        infoModalButton.setAttribute('href', button.href);\n        infoModalButton.setAttribute('rel', 'noopener');\n      } else {\n        infoModalButton = document.createElement('button');\n        infoModalButton.type = 'button';\n      }\n      infoModalButton.classList.add('atcb-modal-btn');\n      if (button.primary) {\n        infoModalButton.classList.add('atcb-modal-btn-primary');\n      }\n      if (button.label == null || button.label == '') {\n        button.label = atcb_translate_hook('Click me', data.language, data);\n      }\n      infoModalButton.textContent = button.label;\n      infoModalButtons.appendChild(infoModalButton);\n      if (index == 0) {\n        infoModalButton.focus();\n      }\n      switch (button.type) {\n        default:\n          infoModalButton.addEventListener(\n            'click',\n            atcb_debounce(() => atcb_close())\n          );\n          infoModalButton.addEventListener(\n            'keyup',\n            atcb_debounce((event) => {\n              if (event.key == 'Enter') {\n                atcb_toggle('close', '', '', true);\n              }\n            })\n          );\n          break;\n        case 'close':\n          infoModalButton.addEventListener(\n            'click',\n            atcb_debounce(() => atcb_close())\n          );\n          infoModalButton.addEventListener(\n            'keyup',\n            atcb_debounce_leading((event) => {\n              if (event.key == 'Enter') {\n                event.preventDefault();\n                atcb_toggle('close', '', '', true);\n              }\n            })\n          );\n          break;\n      }\n    });\n  }\n}\n\n// SHARED FUNCTION TO CALCULATE THE POSITION OF THE DROPDOWN LIST\nfunction atcb_position_list(trigger, list, blockUpwards = false, resize = false) {\n  // check for position anchor\n  let anchorSet = false;\n  const originalTrigger = trigger;\n  if (trigger.querySelector('.atcb-dropdown-anchor') !== null) {\n    trigger = trigger.querySelector('.atcb-dropdown-anchor');\n    anchorSet = true;\n  }\n  // calculate position\n  let triggerDim = trigger.getBoundingClientRect();\n  let listDim = list.getBoundingClientRect();\n  const btnDim = originalTrigger.getBoundingClientRect();\n  if (anchorSet === true && !list.classList.contains('atcb-dropoverlay')) {\n    // in the regular case, we also check for the ideal direction\n    // not in the !updateDirection case and not if there is not enough space above\n    const viewportHeight = document.documentElement.clientHeight;\n    if (\n      (list.classList.contains('atcb-dropup') && resize) ||\n      (!blockUpwards &&\n        triggerDim.top + listDim.height > viewportHeight - 20 &&\n        2 * btnDim.top + btnDim.height - triggerDim.top - listDim.height > 20)\n    ) {\n      originalTrigger.classList.add('atcb-dropup');\n      list.classList.add('atcb-dropup');\n      list.style.bottom =\n        2 * viewportHeight -\n        (viewportHeight + (btnDim.top + (btnDim.top + btnDim.height - triggerDim.top))) -\n        window.scrollY +\n        'px';\n    } else {\n      list.style.top = window.scrollY + triggerDim.top + 'px';\n      if (originalTrigger.classList.contains('atcb-dropup')) {\n        originalTrigger.classList.remove('atcb-dropup');\n      }\n    }\n    // read trigger dimensions again, since after adjusting the top value of the list, something might have changed (e.g. re-adjustment due to missing scrollbars at this point in time)\n    triggerDim = trigger.getBoundingClientRect();\n    list.style.width = triggerDim.width + 'px';\n    list.style.left = triggerDim.left + 'px';\n  } else {\n    // when there is no anchor set (only the case with custom implementations) or the listStyle is set respectively (overlay), we render the modal centered above the trigger\n    // make sure the trigger is not moved over it via CSS in this case!\n    let listWidth = triggerDim.width + 20 + 'px';\n    list.style.minWidth = listWidth;\n    // read list dimensions again, since we altered the width in the step before\n    listDim = list.getBoundingClientRect();\n    list.style.top = window.scrollY + btnDim.top + btnDim.height / 2 - listDim.height / 2 + 'px';\n    list.style.left = triggerDim.left - (listDim.width - triggerDim.width) / 2 + 'px';\n  }\n}\n\n// SHARED FUNCTION TO DEFINE WIDTH AND HEIGHT FOR \"FULLSCREEN\" FULLSIZE ELEMENTS\nfunction atcb_set_fullsize(el) {\n  el.style.width = window.innerWidth + 'px';\n  el.style.height = window.innerHeight + 100 + 'px';\n}\n\n// SHARED DEBOUNCE AND THROTTLE FUNCTIONS\n// going for last call debounce\nfunction atcb_debounce(func, timeout = 200) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n// dropping subsequent calls debounce\nfunction atcb_debounce_leading(func, timeout = 300) {\n  let timer;\n  return (...args) => {\n    if (!timer) {\n      func.apply(this, args);\n    }\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = undefined;\n    }, timeout);\n  };\n}\n// throttle\nfunction atcb_throttle(func, delay = 10) {\n  let result;\n  let timeout = null;\n  let previous = 0;\n  let later = (...args) => {\n    previous = Date.now();\n    timeout = null;\n    result = func.apply(this, args);\n  };\n  return (...args) => {\n    let now = Date.now();\n    let remaining = delay - (now - previous);\n    if (remaining <= 0 || remaining > delay) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      result = func.apply(this, args);\n    } else if (!timeout) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n\n// GLOBAL KEYBOARD AND DEVICE LISTENERS\nif (isBrowser()) {\n  // global listener to ESC key to close dropdown\n  document.addEventListener(\n    'keyup',\n    atcb_debounce_leading((event) => {\n      if (event.key === 'Escape') {\n        atcb_toggle('close', '', '', true);\n      }\n    })\n  );\n  // global listener to arrow key optionlist navigation\n  document.addEventListener('keydown', (event) => {\n    if (\n      document.querySelector('.atcb-list') &&\n      (event.key === 'ArrowDown' || event.key === 'ArrowUp' || event.key === 'Tab')\n    ) {\n      let targetFocus = 0;\n      let currFocusOption = document.activeElement;\n      const optionListCount = document.querySelectorAll('.atcb-list-item').length;\n      if (currFocusOption.classList.contains('atcb-list-item')) {\n        if (event.key === 'ArrowDown' && currFocusOption.dataset.optionNumber < optionListCount) {\n          event.preventDefault();\n          targetFocus = parseInt(currFocusOption.dataset.optionNumber) + 1;\n        } else if (event.key === 'ArrowUp' && currFocusOption.dataset.optionNumber >= 1) {\n          event.preventDefault();\n          targetFocus = parseInt(currFocusOption.dataset.optionNumber) - 1;\n        }\n        if (targetFocus > 0) {\n          document.querySelector('.atcb-list-item[data-option-number=\"' + targetFocus + '\"]').focus();\n        }\n      } else {\n        event.preventDefault();\n        if (\n          document.querySelector('.atcb-list-wrapper.atcb-dropup') &&\n          (event.key === 'ArrowDown' || event.key === 'ArrowUp')\n        ) {\n          document.querySelector('.atcb-list-item[data-option-number=\"' + optionListCount + '\"]').focus();\n        } else {\n          document.querySelector('.atcb-list-item[data-option-number=\"1\"]').focus();\n        }\n      }\n    }\n  });\n  // Global listener to any screen changes\n  window.addEventListener(\n    'resize',\n    atcb_throttle(() => {\n      let activeOverlay = document.getElementById('atcb-bgoverlay');\n      if (activeOverlay != null) {\n        atcb_set_fullsize(activeOverlay);\n      }\n      let activeButton = document.querySelector('.atcb-active');\n      let activeList = document.querySelector('.atcb-dropdown');\n      if (activeButton != null && activeList != null) {\n        atcb_position_list(activeButton, activeList, false, true);\n      }\n    })\n  );\n}\n\n// TRANSLATIONS\n// hook, which can be used to override all potential \"hard\" strings by setting customLabel_ + the key (without spaces) as option key and the intended string as value\nfunction atcb_translate_hook(identifier, language, data) {\n  let searchKey = identifier.replace(/\\s+/g, '').toLowerCase();\n  if (\n    data.customLabels != null &&\n    data.customLabels[`${searchKey}`] != null &&\n    data.customLabels[`${searchKey}`] != ''\n  ) {\n    return atcb_rewrite_html_elements(data.customLabels[`${searchKey}`]);\n  } else {\n    return atcb_translate(identifier, language);\n  }\n}\n\nfunction atcb_translate(identifier, language) {\n  switch (language) {\n    case 'en':\n    default:\n      switch (identifier) {\n        case 'Add to Calendar':\n          return 'Add to Calendar';\n        case 'iCal File':\n          return 'iCal File';\n        case 'Close':\n          return 'Close';\n        case 'Close Selection':\n          return 'Close Selection';\n        case 'Click me':\n          return 'Click me';\n        case 'WebView iCal':\n          return 'Open your browser';\n        case 'WebView info description':\n          return \"Unfortunately, in-app browsers have problems with the way we generate the calendar file.<br>We automatically put a magical URL into your phone's clipboard.<br><ol><li><strong>Open any other browser</strong> on your phone, ...</li><li><strong>Paste</strong> the clipboard content and go.\";\n      }\n      break;\n    case 'de':\n      switch (identifier) {\n        case 'Add to Calendar':\n          return 'Im Kalender speichern';\n        case 'iCal File':\n          return 'iCal-Datei';\n        case 'Close':\n          return 'Schließen';\n        case 'Close Selection':\n          return 'Auswahl schließen';\n        case 'Click me':\n          return 'Klick mich';\n        case 'WebView iCal':\n          return 'Öffne deinen Browser';\n        case 'WebView info description':\n          return 'Leider haben In-App-Browser Probleme mit der Art, wie wir Kalender-Dateien erzeugen.<br>Wir haben automatisch eine magische URL in die Zwischenablage deines Smartphones kopiert.<br><ol><li><strong>Öffne einen anderen Browser</strong> auf deinem Smartphone, ...</li><li>Nutze die <strong>Einfügen</strong>-Funktion, um fortzufahren.';\n      }\n      break;\n  }\n  // if nothing found, return the original identifier\n  return identifier;\n}\n\n\n\n\n//# sourceURL=webpack://weddingv3/./node_modules/add-to-calendar-button/npm_dist/mjs/index.js?");

/***/ }),

/***/ "./src/details.js":
/*!************************!*\
  !*** ./src/details.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global.js */ \"./src/global.js\");\n\n\n(0,_global_js__WEBPACK_IMPORTED_MODULE_0__.enableNavigation)();\n\ndocument.querySelectorAll(\".banner\").forEach((banner, i) => {\n    document.addEventListener(\"scroll\", () => {\n        let viewportHeight = window.innerHeight,\n            bannerHeight = Number(window.getComputedStyle(banner)\n                .getPropertyValue(\"height\").split(\"px\")[0]),\n            bannerRect = banner.getBoundingClientRect(),\n            scroll = window.scrollY;\n        let parallax = bannerRect.top * -0.25;\n        if(bannerRect.top < viewportHeight && bannerRect.bottom > 0) {\n            if(i===1) console.log(scroll, bannerRect.top, parallax);\n            banner.querySelector(\"img\").style.transform = `translateY(${parallax}px)`;\n        }\n    });\n});\n\n//# sourceURL=webpack://weddingv3/./src/details.js?");

/***/ }),

/***/ "./src/global.js":
/*!***********************!*\
  !*** ./src/global.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cookieJar\": () => (/* binding */ cookieJar),\n/* harmony export */   \"enableNavigation\": () => (/* binding */ enableNavigation)\n/* harmony export */ });\n/* harmony import */ var add_to_calendar_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! add-to-calendar-button */ \"./node_modules/add-to-calendar-button/npm_dist/mjs/index.js\");\n\n\nfunction enableNavigation() {\n    document.addEventListener('DOMContentLoaded', add_to_calendar_button__WEBPACK_IMPORTED_MODULE_0__.atcb_init, false);\n    document.addEventListener('DOMContentLoaded', replaceATCBicon);\n\n    let menuButton = document.querySelector(\"#menuIcon\"),\n        navMenu = document.querySelector(\"#navMenu\"),\n        menuItems = navMenu.querySelectorAll(\"li a\");\n\n    menuButton.addEventListener(\"click\", () => {\n        if(navMenu.classList.contains(\"hidden\")){\n            navMenu.classList.remove(\"hidden\");\n            menuButton.innerHTML = \"menu_open\";\n        } else {\n            navMenu.classList.add(\"hidden\");\n            menuButton.innerHTML = \"menu\";\n        }\n    });\n\n    menuItems.forEach(item => {\n        item.addEventListener(\"click\", () => {\n            setTimeout(() => {\n                navMenu.classList.add(\"hidden\");\n                menuButton.innerHTML = \"menu\";\n            }, 500);\n        });\n    });\n}\n\nfunction replaceATCBicon() {\n    document.querySelectorAll(\".atcb-icon\").forEach(icon => {\n        let newIcon = document.createTextNode(\"edit_calendar\");\n        icon.innerHTML = '';\n        icon.classList.replace(\"atcb-icon\", \"material-icons\");\n        icon.append(newIcon);\n    });\n}\n\nfunction cookieJar(key, pair, sameSite = \"lax\") {\n    let parsedCookies = {};\n    if(typeof pair === \"string\") { \n        document.cookie = `${key}=${pair};SameSite=${sameSite};`; \n        return;\n    }\n    else {\n        try{\n        let cookies = String(document.cookie).split(\";\");\n        cookies.forEach(cookie => {\n            cookie = String(cookie).split(\"=\");\n            parsedCookies[cookie[0]] = cookie[1];\n            \n        });\n        console.log(parsedCookies[key]);\n        if(typeof parsedCookies[key] === \"string\") return parsedCookies[key];\n        // else throw(new Error());\n        }\n        catch (err) {\n            return false;\n        }\n    }\n}\n\n\n\n//# sourceURL=webpack://weddingv3/./src/global.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/details.js");
/******/ 	
/******/ })()
;